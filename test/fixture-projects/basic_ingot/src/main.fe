use bar::baz::Baz
use bar::file_items_work
use bing::Bing as Bong
use bing::get_42_backend
use ding::{dang::Dang as Dung, dong}
use bing::BingContract
use std::context::Context

contract Foo:
    pub fn get_my_baz() -> Baz:
        assert file_items_work()
        return Baz(my_bool: true, my_u256: 26)

    pub fn get_my_bing() -> Bong:
        return Bong(my_address: address(42))

    pub fn get_42() -> u256:
        return get_42_backend()

    pub fn get_26() -> u256:
        return std::evm::add(13, 13)

    pub fn call_on_path():
        assert bar::mee::Mee::kawum() == 1
        assert bar::mee::Mee().rums() == 1

    pub fn get_my_dyng() -> dong::Dyng:
        return dong::Dyng(
            my_address: address(8),
            my_u256: 42,
            my_i8: -1
        )

    pub fn create_bing_contract(ctx: Context) -> u256:
        let bing_contract: BingContract = BingContract.create(ctx, 0)
        return bing_contract.add(40, 50)
